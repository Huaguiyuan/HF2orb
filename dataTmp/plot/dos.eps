%!PS-Adobe-2.0 EPSF-2.0
%%Title: dos.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue Nov 13 23:23:54 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dos.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (qluo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Nov 13 23:23:54 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
1.000 UL
LTb
1525 800 M
63 0 V
5161 0 R
-63 0 V
stroke
1375 800 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
1.000 UL
LTb
1525 1457 M
63 0 V
5161 0 R
-63 0 V
stroke
1375 1457 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.002)]
] -83.3 MRshow
1.000 UL
LTb
1525 2113 M
63 0 V
5161 0 R
-63 0 V
stroke
1375 2113 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.004)]
] -83.3 MRshow
1.000 UL
LTb
1525 2770 M
63 0 V
5161 0 R
-63 0 V
stroke
1375 2770 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.006)]
] -83.3 MRshow
1.000 UL
LTb
1525 3426 M
63 0 V
5161 0 R
-63 0 V
stroke
1375 3426 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.008)]
] -83.3 MRshow
1.000 UL
LTb
1525 4083 M
63 0 V
5161 0 R
-63 0 V
stroke
1375 4083 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.01)]
] -83.3 MRshow
1.000 UL
LTb
1525 4739 M
63 0 V
5161 0 R
-63 0 V
stroke
1375 4739 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.012)]
] -83.3 MRshow
1.000 UL
LTb
1525 800 M
0 63 V
0 3876 R
0 -63 V
stroke
1525 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1)]
] -83.3 MCshow
1.000 UL
LTb
2222 800 M
0 63 V
0 3876 R
0 -63 V
stroke
2222 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1.2)]
] -83.3 MCshow
1.000 UL
LTb
2918 800 M
0 63 V
0 3876 R
0 -63 V
stroke
2918 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1.4)]
] -83.3 MCshow
1.000 UL
LTb
3615 800 M
0 63 V
0 3876 R
0 -63 V
stroke
3615 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1.6)]
] -83.3 MCshow
1.000 UL
LTb
4311 800 M
0 63 V
0 3876 R
0 -63 V
stroke
4311 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1.8)]
] -83.3 MCshow
1.000 UL
LTb
5008 800 M
0 63 V
0 3876 R
0 -63 V
stroke
5008 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 2)]
] -83.3 MCshow
1.000 UL
LTb
5704 800 M
0 63 V
0 3876 R
0 -63 V
stroke
5704 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 2.2)]
] -83.3 MCshow
1.000 UL
LTb
6401 800 M
0 63 V
0 3876 R
0 -63 V
stroke
6401 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 2.4)]
] -83.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1525 4739 N
0 -3939 V
5224 0 V
0 3939 V
-5224 0 V
Z stroke
LCb setrgbcolor
200 2769 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true 0 (DOS)]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
4137 175 M
[ [(Symbol) 250.0 0.0 true true 0 (w)]
[(Helvetica) 250.0 0.0 true true 0 ( - )]
[(Symbol) 250.0 0.0 true true 0 (m)]
] -83.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
1525 822 M
10 1260 V
1546 800 L
10 0 V
11 0 V
10 0 V
11 1282 V
1598 800 L
10 0 V
11 0 V
10 641 V
11 -641 V
10 0 V
11 0 V
10 0 V
11 641 V
10 -641 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 641 V
10 641 V
1817 800 L
11 0 V
10 1282 V
1849 800 L
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
10 0 V
1943 800 L
10 1282 V
1964 800 L
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 641 V
11 -641 V
10 0 V
11 1282 V
2068 800 L
11 0 V
10 0 V
11 0 V
10 1282 V
2121 800 L
10 641 V
10 -641 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
2215 800 L
10 0 V
10 0 V
11 0 V
10 1282 V
2267 800 L
10 641 V
11 -641 V
10 1282 V
2309 800 L
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
2392 800 L
11 0 V
10 1282 V
2424 800 L
10 641 V
10 -641 V
11 1282 V
2465 800 L
11 1282 V
2486 800 L
11 321 V
10 -321 V
11 0 V
10 641 V
11 641 V
2549 800 L
10 0 V
11 0 V
10 1282 V
2591 800 L
10 0 V
11 1282 V
10 0 V
2633 800 L
10 0 V
10 641 V
11 641 V
2674 800 L
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 641 V
10 -641 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
11 -641 V
10 641 V
2862 800 L
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
2936 800 L
10 0 V
11 0 V
10 3847 V
2977 800 L
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 641 V
11 -641 V
10 0 V
11 0 V
10 0 V
10 0 V
11 641 V
10 -641 V
11 0 V
10 0 V
11 1282 V
10 -641 V
11 -641 V
10 0 V
10 0 V
11 0 V
10 1282 V
3218 800 L
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 1282 V
3333 800 L
10 1282 V
3354 800 L
10 0 V
11 0 V
10 1282 V
3395 800 L
11 0 V
10 641 V
11 -641 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
3490 800 L
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
3594 800 L
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 641 V
10 -641 V
11 0 V
10 0 V
11 1282 V
3709 800 L
10 0 V
11 0 V
10 1282 V
3751 800 L
10 0 V
11 0 V
10 641 V
11 -641 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 2564 V
3866 800 L
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
3970 800 L
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
4117 800 L
10 1282 V
4137 800 L
11 0 V
10 0 V
11 0 V
10 641 V
11 -641 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 1282 V
4263 800 L
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
4326 800 L
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 1282 V
4472 800 L
10 0 V
11 1282 V
10 641 V
4514 800 L
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 641 V
10 -641 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
4670 800 L
11 0 V
10 0 V
11 0 V
10 1282 V
4723 800 L
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
4848 800 L
11 0 V
10 0 V
10 0 V
11 1282 V
4900 800 L
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 641 V
11 -641 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
10 -641 V
10 -641 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1282 V
5162 800 L
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 1923 V
5256 800 L
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 641 V
11 -641 V
10 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
10 0 V
5465 800 L
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
5569 800 L
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 641 V
10 -641 V
11 641 V
10 -641 V
11 0 V
10 1282 V
5789 800 L
10 0 V
11 0 V
10 1282 V
5830 800 L
11 0 V
10 641 V
11 -641 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 1282 V
10 -641 V
11 641 V
6081 800 L
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
10 641 V
11 -641 V
10 1282 V
11 -641 V
10 -641 V
11 641 V
10 -641 V
11 0 V
10 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 0 V
10 0 V
11 1282 V
6468 800 L
10 0 V
11 0 V
10 0 V
11 641 V
10 -641 V
11 0 V
10 0 V
11 0 V
10 0 V
10 0 V
11 641 V
10 -641 V
11 0 V
10 0 V
11 0 V
10 641 V
11 -641 V
10 0 V
11 240 V
1535 2082 Pls
1546 800 Pls
1556 800 Pls
1567 800 Pls
1577 800 Pls
1588 2082 Pls
1598 800 Pls
1608 800 Pls
1619 800 Pls
1629 1441 Pls
1640 800 Pls
1650 800 Pls
1661 800 Pls
1671 800 Pls
1682 1441 Pls
1692 800 Pls
1702 800 Pls
1713 800 Pls
1723 800 Pls
1734 800 Pls
1744 800 Pls
1755 800 Pls
1765 800 Pls
1776 800 Pls
1786 800 Pls
1797 1441 Pls
1807 2082 Pls
1817 800 Pls
1828 800 Pls
1838 2082 Pls
1849 800 Pls
1859 800 Pls
1870 800 Pls
1880 800 Pls
1891 800 Pls
1901 800 Pls
1912 800 Pls
1922 2082 Pls
1932 2082 Pls
1943 800 Pls
1953 2082 Pls
1964 800 Pls
1974 800 Pls
1985 800 Pls
1995 800 Pls
2006 800 Pls
2016 800 Pls
2026 1441 Pls
2037 800 Pls
2047 800 Pls
2058 2082 Pls
2068 800 Pls
2079 800 Pls
2089 800 Pls
2100 800 Pls
2110 2082 Pls
2121 800 Pls
2131 1441 Pls
2141 800 Pls
2152 800 Pls
2162 800 Pls
2173 800 Pls
2183 800 Pls
2194 800 Pls
2204 2082 Pls
2215 800 Pls
2225 800 Pls
2235 800 Pls
2246 800 Pls
2256 2082 Pls
2267 800 Pls
2277 1441 Pls
2288 800 Pls
2298 2082 Pls
2309 800 Pls
2319 800 Pls
2330 800 Pls
2340 800 Pls
2350 800 Pls
2361 800 Pls
2371 800 Pls
2382 2082 Pls
2392 800 Pls
2403 800 Pls
2413 2082 Pls
2424 800 Pls
2434 1441 Pls
2444 800 Pls
2455 2082 Pls
2465 800 Pls
2476 2082 Pls
2486 800 Pls
2497 1121 Pls
2507 800 Pls
2518 800 Pls
2528 1441 Pls
2539 2082 Pls
2549 800 Pls
2559 800 Pls
2570 800 Pls
2580 2082 Pls
2591 800 Pls
2601 800 Pls
2612 2082 Pls
2622 2082 Pls
2633 800 Pls
2643 800 Pls
2653 1441 Pls
2664 2082 Pls
2674 800 Pls
2685 800 Pls
2695 800 Pls
2706 800 Pls
2716 800 Pls
2727 800 Pls
2737 800 Pls
2748 1441 Pls
2758 800 Pls
2768 800 Pls
2779 800 Pls
2789 800 Pls
2800 800 Pls
2810 800 Pls
2821 800 Pls
2831 2082 Pls
2842 1441 Pls
2852 2082 Pls
2862 800 Pls
2873 800 Pls
2883 800 Pls
2894 800 Pls
2904 800 Pls
2915 800 Pls
2925 2082 Pls
2936 800 Pls
2946 800 Pls
2957 800 Pls
2967 4647 Pls
2977 800 Pls
2988 800 Pls
2998 800 Pls
3009 800 Pls
3019 800 Pls
3030 800 Pls
3040 1441 Pls
3051 800 Pls
3061 800 Pls
3072 800 Pls
3082 800 Pls
3092 800 Pls
3103 1441 Pls
3113 800 Pls
3124 800 Pls
3134 800 Pls
3145 2082 Pls
3155 1441 Pls
3166 800 Pls
3176 800 Pls
3186 800 Pls
3197 800 Pls
3207 2082 Pls
3218 800 Pls
3228 800 Pls
3239 800 Pls
3249 800 Pls
3260 800 Pls
3270 800 Pls
3281 800 Pls
3291 800 Pls
3301 800 Pls
3312 800 Pls
3322 2082 Pls
3333 800 Pls
3343 2082 Pls
3354 800 Pls
3364 800 Pls
3375 800 Pls
3385 2082 Pls
3395 800 Pls
3406 800 Pls
3416 1441 Pls
3427 800 Pls
3437 800 Pls
3448 800 Pls
3458 800 Pls
3469 800 Pls
3479 2082 Pls
3490 800 Pls
3500 800 Pls
3510 800 Pls
3521 800 Pls
3531 800 Pls
3542 800 Pls
3552 800 Pls
3563 800 Pls
3573 800 Pls
3584 2082 Pls
3594 800 Pls
3605 800 Pls
3615 800 Pls
3625 800 Pls
3636 800 Pls
3646 800 Pls
3657 1441 Pls
3667 800 Pls
3678 800 Pls
3688 800 Pls
3699 2082 Pls
3709 800 Pls
3719 800 Pls
3730 800 Pls
3740 2082 Pls
3751 800 Pls
3761 800 Pls
3772 800 Pls
3782 1441 Pls
3793 800 Pls
3803 800 Pls
3813 800 Pls
3824 800 Pls
3834 800 Pls
3845 800 Pls
3855 3364 Pls
3866 800 Pls
3876 800 Pls
3887 800 Pls
3897 800 Pls
3908 800 Pls
3918 800 Pls
3928 800 Pls
3939 800 Pls
3949 800 Pls
3960 2082 Pls
3970 800 Pls
3981 800 Pls
3991 800 Pls
4002 800 Pls
4012 800 Pls
4023 800 Pls
4033 800 Pls
4043 800 Pls
4054 800 Pls
4064 800 Pls
4075 800 Pls
4085 800 Pls
4096 800 Pls
4106 2082 Pls
4117 800 Pls
4127 2082 Pls
4137 800 Pls
4148 800 Pls
4158 800 Pls
4169 800 Pls
4179 1441 Pls
4190 800 Pls
4200 800 Pls
4211 800 Pls
4221 800 Pls
4232 800 Pls
4242 800 Pls
4252 2082 Pls
4263 800 Pls
4273 800 Pls
4284 800 Pls
4294 800 Pls
4305 800 Pls
4315 2082 Pls
4326 800 Pls
4336 800 Pls
4346 800 Pls
4357 800 Pls
4367 800 Pls
4378 800 Pls
4388 800 Pls
4399 800 Pls
4409 800 Pls
4420 800 Pls
4430 800 Pls
4441 800 Pls
4451 800 Pls
4461 2082 Pls
4472 800 Pls
4482 800 Pls
4493 2082 Pls
4503 2723 Pls
4514 800 Pls
4524 800 Pls
4535 800 Pls
4545 800 Pls
4556 800 Pls
4566 800 Pls
4576 800 Pls
4587 1441 Pls
4597 800 Pls
4608 800 Pls
4618 800 Pls
4629 800 Pls
4639 800 Pls
4650 800 Pls
4660 2082 Pls
4670 800 Pls
4681 800 Pls
4691 800 Pls
4702 800 Pls
4712 2082 Pls
4723 800 Pls
4733 800 Pls
4744 800 Pls
4754 800 Pls
4765 800 Pls
4775 800 Pls
4785 800 Pls
4796 800 Pls
4806 800 Pls
4817 800 Pls
4827 800 Pls
4838 2082 Pls
4848 800 Pls
4859 800 Pls
4869 800 Pls
4879 800 Pls
4890 2082 Pls
4900 800 Pls
4911 800 Pls
4921 800 Pls
4932 800 Pls
4942 800 Pls
4953 800 Pls
4963 800 Pls
4974 800 Pls
4984 800 Pls
4994 1441 Pls
5005 800 Pls
5015 800 Pls
5026 800 Pls
5036 800 Pls
5047 800 Pls
5057 800 Pls
5068 2082 Pls
5078 1441 Pls
5088 800 Pls
5099 800 Pls
5109 800 Pls
5120 800 Pls
5130 800 Pls
5141 800 Pls
5151 2082 Pls
5162 800 Pls
5172 800 Pls
5183 800 Pls
5193 800 Pls
5203 800 Pls
5214 800 Pls
5224 800 Pls
5235 800 Pls
5245 2723 Pls
5256 800 Pls
5266 800 Pls
5277 800 Pls
5287 800 Pls
5297 800 Pls
5308 800 Pls
5318 800 Pls
5329 800 Pls
5339 800 Pls
5350 800 Pls
5360 800 Pls
5371 800 Pls
5381 1441 Pls
5392 800 Pls
5402 800 Pls
5412 800 Pls
5423 800 Pls
5433 800 Pls
5444 2082 Pls
5454 2082 Pls
5465 800 Pls
5475 800 Pls
5486 800 Pls
5496 800 Pls
5506 800 Pls
5517 800 Pls
5527 800 Pls
5538 800 Pls
5548 800 Pls
5559 2082 Pls
5569 800 Pls
5580 800 Pls
5590 800 Pls
5601 800 Pls
5611 800 Pls
5621 800 Pls
5632 800 Pls
5642 800 Pls
5653 800 Pls
5663 800 Pls
5674 800 Pls
5684 800 Pls
5695 800 Pls
5705 800 Pls
5716 800 Pls
5726 1441 Pls
5736 800 Pls
5747 1441 Pls
5757 800 Pls
5768 800 Pls
5778 2082 Pls
5789 800 Pls
5799 800 Pls
5810 800 Pls
5820 2082 Pls
5830 800 Pls
5841 800 Pls
5851 1441 Pls
5862 800 Pls
5872 800 Pls
5883 800 Pls
5893 800 Pls
5904 800 Pls
5914 800 Pls
5925 800 Pls
5935 800 Pls
5945 800 Pls
5956 800 Pls
5966 800 Pls
5977 800 Pls
5987 800 Pls
5998 800 Pls
6008 800 Pls
6019 800 Pls
6029 800 Pls
6039 800 Pls
6050 2082 Pls
6060 1441 Pls
6071 2082 Pls
6081 800 Pls
6092 800 Pls
6102 800 Pls
6113 800 Pls
6123 800 Pls
6134 800 Pls
6144 800 Pls
6154 800 Pls
6165 800 Pls
6175 800 Pls
6186 800 Pls
6196 800 Pls
6207 800 Pls
6217 800 Pls
6228 800 Pls
6238 800 Pls
6249 800 Pls
6259 800 Pls
6269 1441 Pls
6280 800 Pls
6290 2082 Pls
6301 1441 Pls
6311 800 Pls
6322 1441 Pls
6332 800 Pls
6343 800 Pls
6353 800 Pls
6363 800 Pls
6374 800 Pls
6384 800 Pls
6395 800 Pls
6405 800 Pls
6416 800 Pls
6426 800 Pls
6437 800 Pls
6447 800 Pls
6458 2082 Pls
6468 800 Pls
6478 800 Pls
6489 800 Pls
6499 800 Pls
6510 1441 Pls
6520 800 Pls
6531 800 Pls
6541 800 Pls
6552 800 Pls
6562 800 Pls
6572 800 Pls
6583 1441 Pls
6593 800 Pls
6604 800 Pls
6614 800 Pls
6625 800 Pls
6635 1441 Pls
6646 800 Pls
6656 800 Pls
6667 1040 Pls
% End plot #1
1.000 UL
LTb
1525 4739 N
0 -3939 V
5224 0 V
0 3939 V
-5224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
